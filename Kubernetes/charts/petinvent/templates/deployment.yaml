apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "petinvent.fullname" . }}
  labels:
    {{- include "petinvent.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "petinvent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "petinvent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "petinvent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "petinvent.fullname" . }}
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ index .Values "app" "secret" "existingSecret" | quote }}
                  key: flaskSecretKey          
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ index .Values "postgresql-ha" "postgresql" "existingSecret" | quote }}
                  key: postgresql-password
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
      - name: init-db
        image: postgres:15-alpine
        envFrom:
          - configMapRef:
              name: {{ include "petinvent.fullname" . }}
        # command: ['sh', '-c', 'sleep 30s']
        command: ['sh', '-c', 
          'until pg_isready -h "${DB_HOSTNAME}" -p "${POSTGRES_PORT}"; 
          do echo "waiting for database"; sleep 4s; done;']
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
